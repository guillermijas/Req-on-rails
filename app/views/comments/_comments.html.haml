
%ul#myTab.nav.nav-tabs{role: 'tablist'}
  %li.nav-item
    %a#relations.nav-link{'aria-controls': 'relations', 'data-toggle': 'tab', href: '#relations-tab', role: 'tab'}= icon('exchange')
  %li.nav-item
    %a#comments.nav-link{'aria-controls': 'Comments', 'data-toggle': 'tab', href: '#comments-tab', role: 'tab'}= icon('comments')
  -unless @project.trello_board_id.blank? || @project.trello_list_id.blank?
    %li.nav-item
      %a#trello.nav-link{'aria-controls': 'trello', 'data-toggle': 'tab', href: '#trello-tab', role: 'tab'}= icon('sticky-note-o')

.tab-content
  #relations-tab.tab-pane{role: 'tabpanel'}
    %h4
      %strong Relaciones
    %br
    %h5 Satisface
    - if @requirement.satisfies
      %p=link_to @requirement.satisfies.id_string, select_project_requirements_path(@project,@requirement.satisfies, scroll: true), remote: true
    -else
      %p (Vacío)

    %h5 Cubre
    - if @requirement.cover.blank?
      %p (Vacío)
    -else
      - @requirement.cover.each do |req|
        %p=link_to req.id_string, select_project_requirements_path(@project, req, scroll: true), remote: true
    %br
    %br
    %br

  #comments-tab.tab-pane{role: 'tabpanel'}
    %section#comments-list
      %article
        %h4
          %strong Comentarios
        %br
        - @comments.each do |comment|
          %p
            %strong= comment.user.short_name
            \:
            = comment.body
            =link_to project_requirement_comment_path(@project, @requirement, comment), method: :delete, remote: true do
              =icon('times')
      %article#comments-form
        = render 'comments/form'
      %br
      %br
      %br

  -unless @project.trello_board_id.blank? || @project.trello_list_id.blank?
    #trello-tab.tab-pane{role: 'tabpanel'}
      %h4
        %strong Trello
      .field
        %label{for: '#title'} Título
        %input#title.form-control{type: 'text', value: "#{@requirement.id_string}"}
      %br
      .field
        %label{for: '#description'} Descripción
        %textarea#description.form-control= strip_tags(@requirement.description.html_safe)

      %a.btn.btn-info#btn-trello Crear tarea trello
      %br
      %br
      %section
        - tasks = Task.where(requirement_id: @requirement).pluck(:trello_task_id).reverse!
        - tasks.each do |t|
          %article{id: "card-list-#{t}"}
          :javascript
            var a = Trello.cards.get("#{ t }", function(card){
              $('article#card-list-'+"#{t}").append(
                "<div class='card'>"+
                  "<div class='card-body'>"+
                    "<h4 class='card-title'>"+ card.name +"</h4>"+
                    "<p class='card-text'>"+ card.desc +"</p>"+
                  "</div>"+
                "</div><br/>");
            });
      %br
      %br
      %br

-unless @project.trello_board_id.blank? || @project.trello_list_id.blank?
  :javascript
    var cardId;
    var creationSuccess = function(data) {
      cardId = data.id;
      console.log('Tarjeta creada con éxito');
      $.ajax({
        url: "#{select_project_requirements_path(@requirement)}?task_id="+cardId,
        type: "GET"
      });
    };

    function getNewCard(){
      var myList = "#{@project.trello_list_id}";
      return {  name: $('#title').val(),
                desc: $('#description').val(),
                idList: myList,
                pos: 'top'
              };
    }

    $("#btn-trello").click(function(e){
      e.preventDefault();
      var card = getNewCard();
      Trello.post('/cards/', card, creationSuccess);
    });

:javascript
  if(active === null){
    $('#relations-tab').addClass('active');
    $('#relations').addClass('active');
  }
  $('#myTab a').click(function(){
    $(this).tab('show');
    active = $(this)[0].id;
  });
  $(document.getElementById(active)).tab('show');
